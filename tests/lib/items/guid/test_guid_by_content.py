from feedplatform import test as feedev
from feedplatform import db
from feedplatform.lib import guid_by_content

ADDINS = [guid_by_content(prefix='cnt::', fields=('title', 'link'),
                          allow_empty=False)]

class TestFeed(feedev.Feed):
    content = """
        <rss><channel>
            <item>
                <title>Foo</title>
                {% 2 %}<description>The foo item.</description>{% end %}
            </item>

            <item>
                <title>Bar</title>
                {% <3 %}<link>http://example.org/posts/bar</link>{% end %}
                {% 3 %}<link>http://example.org/posts/bar-fixed</link>{% end %}
            </item>

            <item>
                {% <4 %}<title>Good item with an id</title>{% end %}
                {% 4 %}<title>Good item with a guid</title>{% end %}
                <guid isPermaLink="false">123456</guid>
            </item>

            {% 5 %}
            <item></item>
            {% end %}
        </channel></rss>
    """

    def pass1(feed):
        # found three items
        assert feed.items.count() == 3

        # the guids generated by our addin should have the requested prefix
        assert any([item.guid.startswith('cnt::') for item in feed.items])

    def pass2(feed):
        # the change in "foo" was detected correctly
        assert feed.items.count() == 3

    def pass3(feed):
        # the change in "bar" was not, since <link> is in the guid.
        # thus, we pick up a duplicate.
        assert feed.items.count() == 4

    def pass4(feed):
        # the third item is using a guid; thus, the change is detected
        assert feed.items.count() == 4

    def pass5(feed):
        # guids are not generated for empty content bases,
        # so no change in item count
        assert feed.items.count() == 4

        # now allow it
        ADDINS[0].allow_empty = True

    def pass6(feed):
        # now the last item is picked up, because a guid is generated
        assert feed.items.count() == 5

def test():
    feedev.testmod()