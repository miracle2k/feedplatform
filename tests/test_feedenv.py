"""Self-test the feed evolution framework.
"""

import sys
from StringIO import StringIO
from tests import feedev
from feedplatform import log

tests_run = 0

class Feed1(feedev.Feed):
    def pass1(feed):
        global tests_run
        tests_run += 1

    def pass5(feed):
        global tests_run
        tests_run += 1

class Feed2(feedev.Feed):
    def pass1(feed):
        global tests_run
        tests_run += 1

    def pass199(feed):
        global tests_run
        tests_run += 1

def test_all_handlers_are_called():
    try:
        feedev.testmod()
    finally:
        assert tests_run == 4

def test_log_output_is_captured():
    # make the the dev sees the log generated by the library if a test fails
    old_stdout = sys.stdout
    sys.stdout = StringIO()
    try:
        log.reset()

        feedev.testmod()
        sys.stdout.seek(0)
        stdout = sys.stdout.read()
    finally:
        sys.stdout = old_stdout
        log.reset()

    print "stdout was: ", stdout    # already goes to nose again
    assert 'Updating feed #1' in stdout

def test_fails_if_no_passes():
    # must be the last test! (removes all passes)

    global Feed1, Feed2
    del Feed1
    del Feed2

    try:
        feedev.testmod()
    except Exception, e:
        assert "has no passes" in str(e)
    else:
        raise AssertionError("testmod() did not fail on pass-less module")