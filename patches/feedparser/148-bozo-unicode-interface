Make sure that everything is exposed as unicode strings, even when the feed is bozo.

From: melsdoerfer <michael@elsdoerfer.com>

Fixes a bug that can cause certain values, mostly when taken from element attributes, to be byte strings when the feed is bozo.

The problem is that unlike tag contents, which are already normalized to unicode, certain vales are taken directly, as-is, from whatever is returned by the parser. Depending on what parser is used (loose, strict, ...), the behaviour can differ, and the loose parser seems to return bytestrings.

Affected are for example:

  - enclosure data
  - feed image url when taken from itunes:image

While the patch is not strictly required, you are strongly encouraged to use it. FeedPlatform expects the parser to expose all values as unicode, and it's ORM (Storm) requires unicode input. Without the patch, you are bound to see ORM exceptions sooner or later.

Reported as issue #148.
---

 feedparser/feedparser.py                           |   22 +++++++++++++-------
 .../illformed/itunes/itunes_channel_image.xml      |    2 +-
 .../tests/illformed/rss/item_enclosure_type.xml    |    2 +-
 .../tests/illformed/rss/item_enclosure_url.xml     |    2 +-
 4 files changed, 17 insertions(+), 11 deletions(-)


diff --git a/feedparser/feedparser.py b/feedparser/feedparser.py
index 37a1a29..0862143 100644
--- a/feedparser/feedparser.py
+++ b/feedparser/feedparser.py
@@ -777,12 +777,8 @@ class _FeedParserMixin:
         if is_htmlish and SANITIZE_HTML:
             if element in self.can_contain_dangerous_markup:
                 output = _sanitizeHTML(output, self.encoding, self.contentparams.get('type', 'text/html'))
-
-        if self.encoding and type(output) != type(u''):
-            try:
-                output = unicode(output, self.encoding)
-            except:
-                pass
+        
+        output = self._makeItUnicode(output)
 
         # address common error where people take data that is already
         # utf-8, presume that it is iso-8859-1, and re-encode it.
@@ -909,6 +905,14 @@ class _FeedParserMixin:
                 pass
             attrsD['href'] = href
         return attrsD
+        
+    def _makeItUnicode(self, something):
+        if self.encoding and type(something) != type(u''):
+            try:
+                return unicode(something, self.encoding)
+            except:
+                pass
+        return something
     
     def _save(self, key, value):
         context = self._getContext()
@@ -1354,7 +1358,7 @@ class _FeedParserMixin:
         if attrsD.has_key('href'):
             expectingText = 0
             if (attrsD.get('rel') == 'alternate') and (self.mapContentType(attrsD.get('type')) in self.html_types):
-                context['link'] = attrsD['href']
+                context['link'] = self._makeItUnicode(attrsD['href'])
         else:
             self.push('link', expectingText)
     _start_producturl = _start_link
@@ -1473,6 +1477,8 @@ class _FeedParserMixin:
         
     def _start_enclosure(self, attrsD):
         attrsD = self._itsAnHrefDamnIt(attrsD)
+        for key in attrsD.keys():
+            attrsD[key] = self._makeItUnicode(attrsD[key])
         context = self._getContext()
         attrsD['rel']='enclosure'
         context.setdefault('links', []).append(FeedParserDict(attrsD))
@@ -1521,7 +1527,7 @@ class _FeedParserMixin:
 
     def _start_itunes_image(self, attrsD):
         self.push('itunes_image', 0)
-        self._getContext()['image'] = FeedParserDict({'href': attrsD.get('href')})
+        self._getContext()['image'] = FeedParserDict({'href': self._makeItUnicode(attrsD.get('href'))})
     _start_itunes_link = _start_itunes_image
         
     def _end_itunes_block(self):
diff --git a/feedparser/tests/illformed/itunes/itunes_channel_image.xml b/feedparser/tests/illformed/itunes/itunes_channel_image.xml
index 0f0cd84..86693c0 100644
--- a/feedparser/tests/illformed/itunes/itunes_channel_image.xml
+++ b/feedparser/tests/illformed/itunes/itunes_channel_image.xml
@@ -1,6 +1,6 @@
 <!--
 Description: iTunes channel image
-Expect:      bozo and feed['image']['href'] == u'http://example.com/logo.jpg'
+Expect:      bozo and feed['image']['href'] == u'http://example.com/logo.jpg' and type(feed['image']['href']) == type(u'')
 -->
 <rss xmlns:itunes="http://www.itunes.com/DTDs/Podcast-1.0.dtd">
 <channel>
diff --git a/feedparser/tests/illformed/rss/item_enclosure_type.xml b/feedparser/tests/illformed/rss/item_enclosure_type.xml
index c65951d..96286e1 100644
--- a/feedparser/tests/illformed/rss/item_enclosure_type.xml
+++ b/feedparser/tests/illformed/rss/item_enclosure_type.xml
@@ -1,6 +1,6 @@
 <!--
 Description: item enclosure type
-Expect:      bozo and entries[0]['enclosures'][0]['type'] == u'image/jpeg'
+Expect:      bozo and entries[0]['enclosures'][0]['type'] == u'image/jpeg' and type(entries[0]['enclosures'][0]['type']) == type(u'')
 -->
 <rss version="2.0">
 <channel>
diff --git a/feedparser/tests/illformed/rss/item_enclosure_url.xml b/feedparser/tests/illformed/rss/item_enclosure_url.xml
index c5d790c..d5e031e 100644
--- a/feedparser/tests/illformed/rss/item_enclosure_url.xml
+++ b/feedparser/tests/illformed/rss/item_enclosure_url.xml
@@ -1,6 +1,6 @@
 <!--
 Description: item enclosure url
-Expect:      bozo and entries[0]['enclosures'][0]['url'] == u'http://example.com/' and entries[0]['links'][0]['rel'] == 'enclosure'
+Expect:      bozo and entries[0]['enclosures'][0]['url'] == u'http://example.com/' and type(entries[0]['enclosures'][0]['url']) == type(u'') and entries[0]['links'][0]['rel'] == 'enclosure'
 -->
 <rss version="2.0">
 <channel>
