Do not use an item's enclosure href as a fallback if an id (guid) is missing.

From: melsdoerfer <michael@elsdoerfer.com>


---

 feedparser/feedparser.py |    5 -----
 1 files changed, 0 insertions(+), 5 deletions(-)


diff --git a/feedparser/feedparser.py b/feedparser/feedparser.py
index 37a1a29..134637e 100644
--- a/feedparser/feedparser.py
+++ b/feedparser/feedparser.py
@@ -1346,8 +1346,6 @@ class _FeedParserMixin:
         attrsD = self._itsAnHrefDamnIt(attrsD)
         if attrsD.has_key('href'):
             attrsD['href'] = self.resolveURI(attrsD['href'])
-            if attrsD.get('rel')=='enclosure' and not context.get('id'):
-                context['id'] = attrsD.get('href')
         expectingText = self.infeed or self.inentry or self.insource
         context.setdefault('links', [])
         context['links'].append(FeedParserDict(attrsD))
@@ -1476,9 +1474,6 @@ class _FeedParserMixin:
         context = self._getContext()
         attrsD['rel']='enclosure'
         context.setdefault('links', []).append(FeedParserDict(attrsD))
-        href = attrsD.get('href')
-        if href and not context.get('id'):
-            context['id'] = href
             
     def _start_source(self, attrsD):
         self.insource = 1
