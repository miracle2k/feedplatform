FeedParser, in trunk, breaks when an item (invalidly) contains an <image> tag.

From: melsdoerfer <michael@elsdoerfer.com>

The 4.1 release did not exhibit this bug.

This is reported as issue #108, and includes a patch by jabronson, wich is the one we are using.

While not strictly necessary to run FeedPlatform, you are strongly encouraged to use the patch, or you'll probably run into the bug sooner or later.
---

 feedparser/feedparser.py                           |   50 ++++++++++++++++++--
 .../tests/illformed/rss/channel_image_item.xml     |   15 ++++++
 2 files changed, 59 insertions(+), 6 deletions(-)
 create mode 100644 feedparser/tests/illformed/rss/channel_image_item.xml


diff --git a/feedparser/feedparser.py b/feedparser/feedparser.py
index 0ad5c32..484fe9d 100644
--- a/feedparser/feedparser.py
+++ b/feedparser/feedparser.py
@@ -968,12 +968,35 @@ class _FeedParserMixin:
     
     def _start_image(self, attrsD):
         context = self._getContext()
+
+        # bozo
+        if self.inentry:
+            self._save('bozo', 'Improper use of image tag inside item tag.')
+            context.setdefault('media_thumbnail', [])
+            self.push('url', 1)
+            context['media_thumbnail'].append(attrsD)
+            self.inimage = 1
+            self.hasTitle = 0
+            return
+        
+        # non-bozo
         context.setdefault('image', FeedParserDict())
         self.inimage = 1
         self.hasTitle = 0
         self.push('image', 0)
             
     def _end_image(self):
+        # bozo
+        if self.inentry:
+            context = self.entries[-1]
+            url = self.pop('url')
+            if url != None and len(url.strip()) != 0:
+                if not context['media_thumbnail'][-1].has_key('url'):
+                    context['media_thumbnail'][-1]['url'] = url
+            self.inimage = 0
+            return
+
+        # non-bozo
         self.pop('image')
         self.inimage = 0
 
@@ -1088,6 +1111,16 @@ class _FeedParserMixin:
 
     def _end_url(self):
         value = self.pop('href')
+
+        # bozo
+        if self.inentry and self.inimage:
+            context = self.entries[-1]
+            if value != None and len(value.strip()) != 0:
+                if not context['media_thumbnail'][-1].has_key('url'):
+                    context['media_thumbnail'][-1]['url'] = value
+            return
+
+        # non-bozo
         if self.inauthor:
             self._save_author('href', value)
         elif self.incontributor:
@@ -1113,6 +1146,11 @@ class _FeedParserMixin:
         if self.insource:
             context = self.sourcedata
         elif self.inimage:
+            # bozo
+            if self.inentry:
+                return self.feeddata
+
+            # non-bozo
             context = self.feeddata['image']
         elif self.intextinput:
             context = self.feeddata['textinput']
@@ -1472,13 +1510,13 @@ class _FeedParserMixin:
     _end_itunes_summary = _end_summary
         
     def _start_enclosure(self, attrsD):
-        attrsD = self._itsAnHrefDamnIt(attrsD)        
+        attrsD = self._itsAnHrefDamnIt(attrsD)        
         for key in attrsD.keys():
-			# copied from self.push()
-            if self.encoding and type(attrsD[key]) != type(u''):
-                try:
-                    attrsD[key] = unicode(attrsD[key], self.encoding)
-                except:
+			# copied from self.push()
+            if self.encoding and type(attrsD[key]) != type(u''):
+                try:
+                    attrsD[key] = unicode(attrsD[key], self.encoding)
+                except:
                     pass
         context = self._getContext()
         attrsD['rel']='enclosure'
diff --git a/feedparser/tests/illformed/rss/channel_image_item.xml b/feedparser/tests/illformed/rss/channel_image_item.xml
new file mode 100644
index 0000000..a0df1ef
--- /dev/null
+++ b/feedparser/tests/illformed/rss/channel_image_item.xml
@@ -0,0 +1,15 @@
+<!--
+Description: misplaced <image> in <item> treated as <media:thumbnail url=...>
+Expect:      bozo and entries[0]['media_thumbnail'][0]['url'] == u'http://image.example.com'
+-->
+<rss version="2.0">
+<channel>
+<link>http://channel.example.com</link>
+<item>
+  <link>http://item.example.com</link>
+  <image>
+    <url>http://image.example.com</url>
+  </image>
+</item>
+</channel>
+</rss
