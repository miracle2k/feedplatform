FeedParser, in trunk, breaks when an item (invalidly) contains an <image> tag.

From: melsdoerfer <michael@elsdoerfer.com>

The 4.1 release did not exhibit this bug.

This is reported as issue #108, and includes a patch by jabronson, on which our own patch is based.

While not strictly necessary to run FeedPlatform, you are strongly encouraged to use the patch, or you'll probably run into the bug sooner or later.
---

 feedparser/feedparser.py                           |   40 ++++++++++++++++++++
 .../tests/illformed/rss/channel_image_item.xml     |   16 ++++++++
 2 files changed, 55 insertions(+), 1 deletions(-)
 create mode 100644 feedparser/tests/illformed/rss/channel_image_item.xml


diff --git a/feedparser/feedparser.py b/feedparser/feedparser.py
index 0862143..0a1959b 100644
--- a/feedparser/feedparser.py
+++ b/feedparser/feedparser.py
@@ -800,7 +800,7 @@ class _FeedParserMixin:
             return output
         
         # store output in appropriate place(s)
-        if self.inentry and not self.insource:
+        if self.inentry and not self.insource and not self.inimage:
             if element == 'content':
                 self.entries[-1].setdefault(element, [])
                 contentparams = copy.deepcopy(self.contentparams)
@@ -970,12 +970,35 @@ class _FeedParserMixin:
     
     def _start_image(self, attrsD):
         context = self._getContext()
+
+        # bozo
+        if self.inentry:
+            self._save('bozo', 'Improper use of image tag inside item tag.')
+            context.setdefault('media_thumbnail', [])
+            self.push('url', 1)
+            context['media_thumbnail'].append(attrsD)
+            self.inimage = 1
+            self.hasTitle = 0
+            return
+        
+        # non-bozo
         context.setdefault('image', FeedParserDict())
         self.inimage = 1
         self.hasTitle = 0
         self.push('image', 0)
             
     def _end_image(self):
+        # bozo
+        if self.inentry:
+            context = self.entries[-1]
+            url = self.pop('url')
+            if url != None and len(url.strip()) != 0:
+                if not context['media_thumbnail'][-1].has_key('url'):
+                    context['media_thumbnail'][-1]['url'] = url
+            self.inimage = 0
+            return
+
+        # non-bozo
         self.pop('image')
         self.inimage = 0
 
@@ -1090,6 +1113,16 @@ class _FeedParserMixin:
 
     def _end_url(self):
         value = self.pop('href')
+
+        # bozo
+        if self.inentry and self.inimage:
+            context = self.entries[-1]
+            if value != None and len(value.strip()) != 0:
+                if not context['media_thumbnail'][-1].has_key('url'):
+                    context['media_thumbnail'][-1]['url'] = value
+            return
+
+        # non-bozo
         if self.inauthor:
             self._save_author('href', value)
         elif self.incontributor:
@@ -1115,6 +1148,11 @@ class _FeedParserMixin:
         if self.insource:
             context = self.sourcedata
         elif self.inimage:
+            # bozo
+            if self.inentry:
+                return self.feeddata
+
+            # non-bozo
             context = self.feeddata['image']
         elif self.intextinput:
             context = self.feeddata['textinput']
diff --git a/feedparser/tests/illformed/rss/channel_image_item.xml b/feedparser/tests/illformed/rss/channel_image_item.xml
new file mode 100644
index 0000000..5ff6843
--- /dev/null
+++ b/feedparser/tests/illformed/rss/channel_image_item.xml
@@ -0,0 +1,16 @@
+<!--
+Description: misplaced <image> in <item> treated as <media:thumbnail url=...>; <link> in <image> does not override entry-level <link>
+Expect:      bozo and entries[0]['media_thumbnail'][0]['url'] == u'http://url.image.example.com' and entries[0]['link'] == u'http://item.example.com'
+-->
+<rss version="2.0">
+<channel>
+<link>http://channel.example.com</link>
+<item>
+  <link>http://item.example.com</link>
+  <image>
+    <url>http://url.image.example.com</url>
+    <link>http://link.image.example.com</link>
+  </image>
+</item>
+</channel>
+</rss
